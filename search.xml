<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vueRouter使用</title>
      <link href="/2022/11/21/vuerouter-shi-yong/"/>
      <url>/2022/11/21/vuerouter-shi-yong/</url>
      
        <content type="html"><![CDATA[<h5 id="1、安装vue-router"><a href="#1、安装vue-router" class="headerlink" title="1、安装vue-router"></a>1、安装vue-router</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-router</span><br></pre></td></tr></table></figure><h5 id="2、配置路由信息"><a href="#2、配置路由信息" class="headerlink" title="2、配置路由信息"></a>2、配置路由信息</h5><ol><li>创建router文件夹，创建index.ts文件</li><li>引入路由对象，配置路由信息，每一个路由对应一个组件页面</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import &#123;createRouter,createWebHistory,RotueRecordRow&#125; from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line">// 配置路由信息</span><br><span class="line">const routes:Array&lt;RouteRecordRow&gt; = [</span><br><span class="line">    // 配置项中path和component是必选项，meta，child是可选项</span><br><span class="line">    &#123;</span><br><span class="line">    path:&#x27;&#x27;,</span><br><span class="line">    component:</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">    </span><br><span class="line">// 创建路由</span><br><span class="line">const router = createRouter(&#123;</span><br><span class="line">    history:createWebHistory(),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br><span class="line">// 导出路由</span><br><span class="line">export defalut router;    </span><br></pre></td></tr></table></figure><ol start="3"><li><p>main.ts注册路由组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import router from &#x27;./router&#x27;</span><br><span class="line">app.use(router);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在合适的地方使用router入口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;RouterView&gt;&lt;/RouterView&gt;</span><br></pre></td></tr></table></figure></li><li><p>router使用路径</p></li></ol><p>​先配置好路由文件，路由url映射不同的组件，默认导出路由，然后全局注册路由组件 app.use()，在其他文件需要用到router的时候，引入useRotuer，创建路由对象router。</p><h5 id="3、编程式导航"><a href="#3、编程式导航" class="headerlink" title="3、编程式导航"></a>3、编程式导航</h5><ol><li><p>绑定触发路由跳转事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 编程式导航路由跳转 --&gt;</span><br><span class="line">&lt;!-- 1、传入路由url --&gt;</span><br><span class="line">&lt;button @click=&quot;toPage(&#x27;/&#x27;)&quot;&gt;login&lt;/button&gt;</span><br><span class="line">&lt;!-- 2、 传入路由配置文件的名字，和路由属性name对应 --&gt;</span><br><span class="line">&lt;button @click=&quot;toPage(&#x27;regist&#x27;)&quot;&gt;regist&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">const router = useRouter();</span><br><span class="line">const toPage = (url:string) =&gt; &#123;</span><br><span class="line">  // 1、字符串形式</span><br><span class="line">  // router.push(url)</span><br><span class="line">  // 2、对象形式</span><br><span class="line">  // router.push(&#123;</span><br><span class="line">  //   path:url</span><br><span class="line">  // &#125;)</span><br><span class="line">  // 3、命名式,参数要和路由配置信息的name属性对应上</span><br><span class="line">  router.push(&#123;</span><br><span class="line">    name:url</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>2.历史记录</p><p>​replace 控制路由是否保存历史记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link style=&quot;margin-left: 100px;&quot; to=&quot;/&quot;&gt;login&lt;/router-link</span><br><span class="line">// router-link默认使用replace，不保存历史记录</span><br><span class="line">&lt;router-link replace style=&quot;margin-left: 100px;&quot; to=&quot;/reg&quot;&gt;regist&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">// 使用router里的go back方法实现路由的历史记录</span><br><span class="line">&lt;button @click=&quot;next()&quot;&gt;next&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;pre()&quot;&gt;pre&lt;/button&gt;</span><br><span class="line">const next = () =&gt; &#123;</span><br><span class="line">  router.go(1);</span><br><span class="line">&#125;;</span><br><span class="line">const pre = () =&gt; &#123;</span><br><span class="line">  router.back();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><h5 id="4、路由传参"><a href="#4、路由传参" class="headerlink" title="4、路由传参"></a>4、路由传参</h5><ol><li><p>使用query参数  — 在url中展示出来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> useRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将query（对象）中的参数传入到指定的路由</span></span><br><span class="line">router.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/que&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在要使用的组件里面引入useRoute</span></span><br><span class="line"><span class="keyword">import</span> useRoute <span class="keyword">from</span> <span class="string">&#x27;vue-route&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span><br><span class="line"></span><br><span class="line">在需要参数的地方引入</span><br><span class="line">&#123;&#123;route.<span class="property">query</span>.属性&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用params参数  — 在内存中体现，在url中不展示出来，刷新页面会丢失</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// params参数要和name属性一起使用</span></span><br><span class="line">router.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;que&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// name属性对应路由routes配置文件的name属性一致</span></span><br><span class="line"><span class="comment">// 路由配置文件的path路径需要加上params参数</span></span><br><span class="line"><span class="comment">// 如下</span></span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/que/:id/:name/:prive&#x27;</span></span><br><span class="line"><span class="comment">// 如果没有传入这些参数，会有参数丢失问题</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="5、嵌套路由"><a href="#5、嵌套路由" class="headerlink" title="5、嵌套路由"></a>5、嵌套路由</h5><ol><li><p>子路由在path里面不要加斜杠</p></li><li><p>嵌套路由配置文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/test&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../components/UsetTest.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">children</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>:<span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../components/UserLogin.vue&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;regist&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;regist&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>:<span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../components/UserResgit.vue&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套路由的使用 — 在父路由组件使用router-view</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/test/login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/test/regist&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">       &lt;!-- 静态行内样式书写 --&gt;</span><br><span class="line">       <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background: blue;color:white;&quot;</span>&gt;</span>溯洄从之,道阻且长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">       &lt;!-- 动态行内样式书写 --&gt;</span><br><span class="line">       <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;width:&#x27;200px&#x27;,height:&#x27;200px&#x27;,background:&#x27;aqua&#x27;,color:&#x27;white&#x27;&#125;&quot;</span>&gt;</span>溯游从之,宛在水中央<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><h5 id="6、路由重定向-别名"><a href="#6、路由重定向-别名" class="headerlink" title="6、路由重定向-别名"></a>6、路由重定向-别名</h5><ol><li><p>路由配置文件 — redirect</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">       <span class="attr">name</span>:<span class="string">&#x27;route&#x27;</span>,</span><br><span class="line">       <span class="comment">// 1、当路由定位到/时，将重定向到redirect指定的路由</span></span><br><span class="line">       <span class="comment">// 2、可使用字符串形式，对象形式，函数to形式</span></span><br><span class="line">       <span class="attr">redirect</span>:<span class="string">&#x27;/user2&#x27;</span>,</span><br><span class="line">       <span class="attr">redirect</span>:&#123;</span><br><span class="line">           <span class="attr">path</span>:<span class="string">&#x27;/user2&#x27;</span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">redirect</span>:<span class="function"><span class="params">to</span> =&gt;</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&#x27;/user2&#x27;</span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">redirect</span>:<span class="function"><span class="params">to</span> =&gt;</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> &#123;</span><br><span class="line">               <span class="comment">// 可返回重定向路由和传入query参数</span></span><br><span class="line">               <span class="comment">// 在重定向路由后加上query参数</span></span><br><span class="line">               <span class="attr">path</span>:<span class="string">&#x27;/user2&#x27;</span>,</span><br><span class="line">               <span class="attr">query</span>:&#123;</span><br><span class="line">                   <span class="attr">name</span>:<span class="string">&#x27;xiaoman&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;,</span><br></pre></td></tr></table></figure></li></ol><h5 id="7、命名视图"><a href="#7、命名视图" class="headerlink" title="7、命名视图"></a>7、命名视图</h5><ol><li><p>路由配置文件 — components 需要加s，使用对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;route&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../components/router.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">children</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;user1&#x27;</span>,</span><br><span class="line">            <span class="attr">components</span>:&#123;</span><br><span class="line">                <span class="attr">default</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;../components/A.vue&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;user2&#x27;</span>,</span><br><span class="line">            <span class="attr">components</span>:&#123;</span><br><span class="line">                <span class="attr">BBB</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;../components/B.vue&#x27;</span>),</span><br><span class="line">                <span class="attr">CCC</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;../components/C.vue&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   &lt;router-link to=<span class="string">&quot;/user1&quot;</span>&gt;user1&lt;/router-link&gt;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 到user2路由，此路由下有两个组件，则都显示出来</span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/user2&quot;</span>&gt;</span>user2<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">&quot;CCC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">&quot;BBB&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><h5 id="8、导航守卫"><a href="#8、导航守卫" class="headerlink" title="8、导航守卫"></a>8、导航守卫</h5><h6 id="8-1、前置守卫"><a href="#8-1、前置守卫" class="headerlink" title="8.1、前置守卫"></a>8.1、前置守卫</h6><h6 id="8-2、后置守卫"><a href="#8-2、后置守卫" class="headerlink" title="8.2、后置守卫"></a>8.2、后置守卫</h6>]]></content>
      
      
      <categories>
          
          <category> vueRouter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> vueRouter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css基础</title>
      <link href="/2022/11/16/css-ji-chu/"/>
      <url>/2022/11/16/css-ji-chu/</url>
      
        <content type="html"><![CDATA[<h5 id="1-选择器"><a href="#1-选择器" class="headerlink" title="1.选择器"></a>1.选择器</h5><h6 id="1-1、子代选择器"><a href="#1-1、子代选择器" class="headerlink" title="1.1、子代选择器"></a>1.1、子代选择器</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span>&gt;<span class="selector-tag">h1</span>  --- 代表<span class="selector-tag">h2</span>下的<span class="selector-tag">h1</span>标签，只包含子代，不包含孙代</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="1-2、兄弟选择器"><a href="#1-2、兄弟选择器" class="headerlink" title="1.2、兄弟选择器"></a>1.2、兄弟选择器</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span>~<span class="selector-tag">h1</span>  --- 所有兄弟</span><br><span class="line"><span class="selector-tag">h2</span>+<span class="selector-tag">h1</span>  --- 最亲的一个兄弟</span><br></pre></td></tr></table></figure><h6 id="1-3、属性选择器"><a href="#1-3、属性选择器" class="headerlink" title="1.3、属性选择器"></a>1.3、属性选择器</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title]</span>  --- <span class="selector-tag">h1</span>标签中含有title属性才可被选中</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title=<span class="string">&quot;nihao&quot;</span>]</span>  --- <span class="selector-tag">h1</span>标签含有title属性，而且属性值为nihao才可被选中</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title^=<span class="string">&quot;nihao&quot;</span>]</span>  --- 属性值为nihao开头的都可被选中</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title$=<span class="string">&quot;nihao&quot;</span>]</span>  --- 属性值为nihao结尾的都可被选中</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title*=<span class="string">&quot;nihao&quot;</span>]</span>  --- 属性值中含有nihao的都可被选中</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-attr">[title|=<span class="string">&quot;nihao&quot;</span>]</span>  --- 属性值为nihao开头的或者后跟-的（nihao-dfa）都可被选中</span><br></pre></td></tr></table></figure><h6 id="1-4、伪类选择器"><a href="#1-4、伪类选择器" class="headerlink" title="1.4、伪类选择器"></a>1.4、伪类选择器</h6><p>用来添加一些选择器的特殊效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#FF0000</span>;&#125; <span class="comment">/* 未访问的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125; <span class="comment">/* 已访问的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125; <span class="comment">/* 鼠标划过链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125; <span class="comment">/* 已选中的链接 */</span></span><br></pre></td></tr></table></figure><h5 id="2-权限应用"><a href="#2-权限应用" class="headerlink" title="2.权限应用"></a>2.权限应用</h5><h6 id="2-1、权重"><a href="#2-1、权重" class="headerlink" title="2.1、权重"></a>2.1、权重</h6><ol><li>id –&gt; 100</li><li>class，类属性, 类选择器 —&gt; 10</li><li>标签，伪元素 —&gt; 1</li><li>*—&gt; 0</li><li>行内样式 —&gt; 1000</li></ol><h5 id="3-盒子概念及基本使用"><a href="#3-盒子概念及基本使用" class="headerlink" title="3.盒子概念及基本使用"></a>3.盒子概念及基本使用</h5><h6 id="3-1、自动撑满可用空间"><a href="#3-1、自动撑满可用空间" class="headerlink" title="3.1、自动撑满可用空间"></a>3.1、自动撑满可用空间</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 宽度和高度自动撑满父级元素可用空间</span><br><span class="line"><span class="attribute">display</span>:inline-block  // 行内元素可转为行内块元素或块级元素</span><br><span class="line">width: -webkit-fill-available;</span><br><span class="line">heigth: -webkit-fill-available;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完整的前端开发流程</title>
      <link href="/2022/11/13/wan-zheng-de-qian-duan-kai-fa-liu-cheng/"/>
      <url>/2022/11/13/wan-zheng-de-qian-duan-kai-fa-liu-cheng/</url>
      
        <content type="html"><![CDATA[<h5 id="1-流程概述"><a href="#1-流程概述" class="headerlink" title="1.流程概述"></a>1.流程概述</h5><ul><li>评审需求</li><li>画出原型图</li><li>技术选型</li><li>项目架构搭建</li><li>绘制页面</li><li>对接接口</li><li>测试</li></ul><h5 id="2-例子"><a href="#2-例子" class="headerlink" title="2.例子"></a>2.例子</h5><h6 id="2-1、评审需求"><a href="#2-1、评审需求" class="headerlink" title="2.1、评审需求"></a>2.1、评审需求</h6><p>人事管理系统，web端</p><p>需求：</p><ol><li>账号分为管理员和员工两种，分别对应两种不同的UI界面</li><li>管理员账号系统内置，员工账号信息有管理员录入数据库，员工才可以使用账号登录</li><li>管理员可以增删改查员工信息，员工可以查看自己的信息</li><li>可以对员工信息进行排序查询</li><li>公司有不同的部门，每个部门有对应的业绩、总人数，可数据化</li></ol><h6 id="2-2、原型图"><a href="#2-2、原型图" class="headerlink" title="2.2、原型图"></a>2.2、原型图</h6><h6 id="2-3、技术选型"><a href="#2-3、技术选型" class="headerlink" title="2.3、技术选型"></a>2.3、技术选型</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue3+vite2+ts+pinia+vueRouter+axios+mockjs+naive-ui-plug</span><br></pre></td></tr></table></figure><h6 id="2-4、项目架构搭建"><a href="#2-4、项目架构搭建" class="headerlink" title="2.4、项目架构搭建"></a>2.4、项目架构搭建</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---src</span><br><span class="line">|config ---重新配置统一的接口请求</span><br><span class="line">|pages ---展示页面，重复性低</span><br><span class="line">|component ---组件，复用性高</span><br><span class="line">|api ---配置api，获取服务端返回的数据</span><br><span class="line">|router ---配置路由</span><br><span class="line">|store ---配置pinia</span><br><span class="line">|sytle ---css公共样式</span><br><span class="line">|main.<span class="property">ts</span></span><br><span class="line">|<span class="title class_">App</span>.<span class="property">vue</span></span><br></pre></td></tr></table></figure><h5 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h5>]]></content>
      
      
      <categories>
          
          <category> 开发流程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实习 </tag>
            
            <tag> 业务 </tag>
            
            <tag> 流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite指南</title>
      <link href="/2022/11/08/vite-ji-chu/"/>
      <url>/2022/11/08/vite-ji-chu/</url>
      
        <content type="html"><![CDATA[<h5 id="1-vite的依赖预构建"><a href="#1-vite的依赖预构建" class="headerlink" title="1.vite的依赖预构建"></a>1.vite的依赖预构建</h5><p><em>找寻依赖的过程时自当前目录依次向上寻找的过程，知道搜寻到根目录或搜寻的对应依赖为止</em></p><p><strong>vite解决了三个问题</strong></p><p>​1、不同的第三包会有不同的导出格式</p><p>​2、处理包的路径，直接使用.vite&#x2F;deps。方便路径重写</p><p>​3、网络多包传输问题，vite尽可能将他们集成，最后只生成一个或几个模块</p><h5 id="2-vite配置文件语法提示"><a href="#2-vite配置文件语法提示" class="headerlink" title="2.vite配置文件语法提示"></a>2.vite配置文件语法提示</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineConfig&#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 让编译器知道类型是什么</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">optimizeDeps</span>: &#123;</span><br><span class="line">        <span class="attr">exclude</span>: []  <span class="comment">// 将数组里的依赖不进行依赖预构建</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种写法：类型标注</span></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> import(&#x27;vite).defineConfig */</span></span><br><span class="line"><span class="keyword">const</span> viteConfig = &#123;</span><br><span class="line">    <span class="attr">optimizeDeps</span>: &#123;</span><br><span class="line">        <span class="attr">exclude</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> viteConfig</span><br><span class="line"></span><br><span class="line"><span class="comment">// 策略模式 </span></span><br><span class="line"><span class="keyword">const</span> envResolve = &#123;</span><br><span class="line">    <span class="string">&quot;built&quot;</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;生产环境&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (&#123;...viteBaseConfig,...viteProdConfig&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;serve&quot;</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;开发环境&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (&#123;...viteBaseConfig,...viteDevConfig&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(<span class="function">(<span class="params">&#123;command&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;command&quot;</span>, command);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">envResolve</span>(command)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="3-环境变量配置"><a href="#3-环境变量配置" class="headerlink" title="3.环境变量配置"></a>3.环境变量配置</h5><p>环境变量：会根据当前的代码环境产生值的变化的变量就叫做环境变量。</p><p>代码环境：</p><ul><li>开发环境</li><li>测试环境</li><li>预发布环境</li><li>灰度环境</li><li>生产环境</li></ul><h5 id="4-vite常用依赖项"><a href="#4-vite常用依赖项" class="headerlink" title="4.vite常用依赖项"></a>4.vite常用依赖项</h5><p>依赖项 — vite-plugin-mock</p><h5 id="5-mock模拟数据"><a href="#5-mock模拟数据" class="headerlink" title="5.mock模拟数据"></a>5.mock模拟数据</h5><p>前后端一般是并行开发  例如用户列表（接口文档规范）</p><p>1、简单方式：直接写死数据，方便调试</p><p>​缺陷：</p><pre><code>    - 没法做海量数据测试    - 没法获得一些标准数据    - 没法感知http的异常</code></pre><p>axios — http请求库</p><p>2、mockjs：模拟海量数据，vite-plugin-mock的依赖项是mockjs</p>]]></content>
      
      
      <categories>
          
          <category> vite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
            <tag> 构建工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue基础</title>
      <link href="/2022/10/28/vue-ji-chu/"/>
      <url>/2022/10/28/vue-ji-chu/</url>
      
        <content type="html"><![CDATA[<h5 id="1-窗口随鼠标移动"><a href="#1-窗口随鼠标移动" class="headerlink" title="1.窗口随鼠标移动"></a>1.窗口随鼠标移动</h5><p>ts逻辑代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const vMove:Directive&lt;any, void&gt; = (el:HTMLElement,bingding:DirectiveBinding) =&gt; &#123;</span><br><span class="line">  let moveElement:HTMLDivElement = el.firstElementChild as HTMLDivElement;</span><br><span class="line">  console.log(moveElement);</span><br><span class="line">  const moveDown = (e:MouseEvent) =&gt; &#123;</span><br><span class="line">    let x = e.clientX - el.offsetLeft;</span><br><span class="line">    let y = e.clientY - el.offsetTop;</span><br><span class="line">    const move = (e:MouseEvent) =&gt; &#123;</span><br><span class="line">      console.log(e);</span><br><span class="line">      el.style.left = e.clientX - x + &#x27;px&#x27;;</span><br><span class="line">      el.style.top = e.clientY - y + &#x27;px&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">    document.addEventListener(&#x27;mousemove&#x27;, move);</span><br><span class="line">    document.addEventListener(&#x27;mouseup&#x27;,() =&gt; &#123;</span><br><span class="line">      document.removeEventListener(&#x27;mousemove&#x27;, move);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  moveElement.addEventListener(&#x27;mousedown&#x27;, moveDown);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.图片生成baseurl</p><p>ts逻辑代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">type Options = &#123;</span><br><span class="line">    el: string;</span><br><span class="line">&#125;</span><br><span class="line">export default function(options:Options):Promise&lt;&#123;baseurl:string&#125;&gt; &#123;</span><br><span class="line">    return new Promise(resolve =&gt; &#123;</span><br><span class="line">        onMounted(() =&gt; &#123;</span><br><span class="line">            let img:HTMLImageElement = document.querySelector(options.el) as HTMLImageElement;</span><br><span class="line">            // console.log(img, &#x27;-------&#x27;);</span><br><span class="line">            img.onload = () =&gt; &#123;</span><br><span class="line">                resolve(&#123;</span><br><span class="line">                    baseurl:base64(img)</span><br><span class="line">                &#125;)       </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)  </span><br><span class="line">        const base64 = (el:HTMLImageElement) =&gt; &#123;</span><br><span class="line">            const canvas = document.createElement(&#x27;canvas&#x27;);</span><br><span class="line">            const ctx = canvas.getContext(&#x27;2d&#x27;);</span><br><span class="line">            canvas.width = el.width;</span><br><span class="line">            canvas.height = el.height;</span><br><span class="line">            ctx?.drawImage(el,0,0,el.width,el.height);</span><br><span class="line">            return canvas.toDataURL(&#x27;image/jgp&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express 创建接口</title>
      <link href="/2022/10/22/express-chuang-jian-jie-kou/"/>
      <url>/2022/10/22/express-chuang-jian-jie-kou/</url>
      
        <content type="html"><![CDATA[<h3 id="1、express-创建本地接口"><a href="#1、express-创建本地接口" class="headerlink" title="1、express 创建本地接口"></a>1、express 创建本地接口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&#x27;express&#x27;);</span><br><span class="line">const app = express();</span><br><span class="line"></span><br><span class="line">app.get(&#x27;接口url&#x27;, (req, res) =&gt; &#123;</span><br><span class="line">res.json(&#123;</span><br><span class="line">code: 200,</span><br><span class="line">message: &#x27;&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(9999, () =&gt; &#123;</span><br><span class="line">console.log(&#x27;running on localhost:9999&#x27;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ref函数</title>
      <link href="/2022/10/20/ref-reactive-han-shu/"/>
      <url>/2022/10/20/ref-reactive-han-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="1、ref用法"><a href="#1、ref用法" class="headerlink" title="1、ref用法"></a>1、ref用法</h3><p>ref是一个函数，绑定数据，使数据成为响应式数据，是深层绑定，使用更改数据都需要经过value属性</p><h3 id="2、shallowRef用法"><a href="#2、shallowRef用法" class="headerlink" title="2、shallowRef用法"></a>2、shallowRef用法</h3><p>shallowRef是表层绑定，只可以绑定的value这一层</p><p>ref和shallowRef不能同时使用，ref会影响使徒的更新，ref底层时调用triggerRef函数的使用，会将shallowRef一起更新！</p><h3 id="3、reactive函数"><a href="#3、reactive函数" class="headerlink" title="3、reactive函数"></a>3、reactive函数</h3><p>reacetive也是响应式绑定数据，限制绑定对象，引用类型，map，set的数据类型，可直接使用或者更改对象的数据，不用经过value属性</p><h3 id="4、toRef函数"><a href="#4、toRef函数" class="headerlink" title="4、toRef函数"></a>4、toRef函数</h3><p><em>toRef(结构的对象，结构的值)使用场景解构赋值</em>，想解构出来的数据成为响应式数据，就需要使用toRef函数，（前提解构的数据定义时也为响应式数据）!</p><p>vue官方为封装了一个函数实现这个功能，toRefs函数，将解构对象解构出来的数据变成响应数据</p><p>v-if会比较消耗性能，if为false或true时，会绑定生命周期的创建和销毁钩子（beforemounte）的，涉及了组件的销毁和创建，而v-show不会</p><h3 id="5、购物车案例"><a href="#5、购物车案例" class="headerlink" title="5、购物车案例"></a>5、购物车案例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;table border style=&quot;width:600px&quot;&gt;</span><br><span class="line">      &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;数量&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/thead&gt;</span><br><span class="line">      &lt;tbody&gt;</span><br><span class="line">        &lt;tr v-for=&quot;(item, index) in data&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">          &lt;th&gt;&#123;&#123;item.name&#125;&#125;&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;&lt;button @click=&quot;handleNum(item,false)&quot;&gt;-&lt;/button&gt;&#123;&#123;item.num&#125;&#125;&lt;button @click=&quot;handleNum(item,true)&quot;&gt;+&lt;/button&gt;&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;&#123;&#123;item.price&#125;&#125;&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;&lt;button @click=&quot;handleDel(index)&quot;&gt;删除&lt;/button&gt;&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/tbody&gt;</span><br><span class="line">      &lt;tfoot&gt;</span><br><span class="line">        &lt;th&gt;&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;总价：&#123;&#123;total&#125;&#125;&lt;/th&gt;</span><br><span class="line">      &lt;/tfoot&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&#x27;ts&#x27;&gt;</span><br><span class="line">import &#123; ref, reactive, computed&#125; from &#x27;vue&#x27;</span><br><span class="line">type Shop = &#123;</span><br><span class="line">  name: string;</span><br><span class="line">  num: number;</span><br><span class="line">  price: number;</span><br><span class="line">&#125;</span><br><span class="line">const data = reactive&lt;Shop[]&gt;([</span><br><span class="line">  &#123;</span><br><span class="line">    name: &#x27;裤子&#x27;,</span><br><span class="line">    num: 1,</span><br><span class="line">    price: 20</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: &#x27;外套&#x27;,</span><br><span class="line">    num: 1,</span><br><span class="line">    price: 30</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    name: &#x27;帽子&#x27;,</span><br><span class="line">    num: 1,</span><br><span class="line">    price: 50</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">let total = ref(0);</span><br><span class="line"></span><br><span class="line">// computed计算属性，只要里面用到的响应式数据发生变化，就会重新计算属性，不用再每一</span><br><span class="line">// 个用到此属性的位置调用</span><br><span class="line">total = computed(() =&gt; &#123;</span><br><span class="line">  return data.reduce((prev, cur) =&gt; &#123;</span><br><span class="line">    return prev + cur.num * cur.price;</span><br><span class="line">  &#125;, 0)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const handleNum = (item:Shop, type:boolean):void =&gt; &#123;</span><br><span class="line">  if (item.num &gt; 1 &amp;&amp; !type) &#123;</span><br><span class="line">    item.num--;</span><br><span class="line">  &#125;</span><br><span class="line">  if (item.num &lt; 10 &amp;&amp; type) &#123;</span><br><span class="line">    item.num++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const handleDel = (index:number):void =&gt; &#123;</span><br><span class="line">  data.splice(index, 1);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  th &#123;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mock模拟数据</title>
      <link href="/2022/10/11/mock-mo-ni-shu-ju/"/>
      <url>/2022/10/11/mock-mo-ni-shu-ju/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript基础</title>
      <link href="/2022/10/09/typescript-ji-chu/"/>
      <url>/2022/10/09/typescript-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个大三前端的2022年中总结</title>
      <link href="/2022/10/08/yi-ge-da-san-qian-duan-de-2022-nian-zhong-zong-jie/"/>
      <url>/2022/10/08/yi-ge-da-san-qian-duan-de-2022-nian-zhong-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>哎，迷茫</p><h3 id="为什么焦虑"><a href="#为什么焦虑" class="headerlink" title="为什么焦虑"></a>为什么焦虑</h3><h3 id="生命的意义"><a href="#生命的意义" class="headerlink" title="生命的意义"></a>生命的意义</h3><h3 id="生活的压力"><a href="#生活的压力" class="headerlink" title="生活的压力"></a>生活的压力</h3><h3 id="给自己的建议"><a href="#给自己的建议" class="headerlink" title="给自己的建议"></a>给自己的建议</h3><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3>]]></content>
      
      
      <categories>
          
          <category> 代码人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码人生 </tag>
            
            <tag> 迷茫 </tag>
            
            <tag> 焦虑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON的数据格式</title>
      <link href="/2022/10/07/json-de-shu-ju-ge-shi/"/>
      <url>/2022/10/07/json-de-shu-ju-ge-shi/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在JavaScript操作XML存在严重的跨浏览器问题，在XML结构中提取数据也要便利DOM，这些操作都要编写大量的代码，JSON的出现解决了这些麻烦。JSOM能够创建于XML相同的数据结构，JSON中的属性必须用双引号括起来。                                                                                                 </p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2022/10/05/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2022/10/05/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>第一章<br>内容<br>第二章<br>内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/05/hello-world/"/>
      <url>/2022/10/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
